//------------------------------------------------------------------------------
// container_Constr.cpp - содержит функции обработки контейнера
//------------------------------------------------------------------------------

#include "container.h"

//------------------------------------------------------------------------------
// Инициализация контейнера
void Init(container& c) {
  c.len = 0;
}

//------------------------------------------------------------------------------
// Очистка контейнера от элементов (освобождение памяти)
void Clear(container& c) {
  c.len = 0;
}

//------------------------------------------------------------------------------
// Ввод содержимого контейнера из указанного потока
void In(container& c, ifstream& ifst) {
  while (!ifst.eof()) {
    if (In(c.cont[c.len], ifst)) {
      c.len++;
    }
  }
}

//------------------------------------------------------------------------------
// Случайный ввод содержимого контейнера
void InRnd(container& c, int size) {
  while (c.len < size) {
    if (InRnd(c.cont[c.len])) {
      c.len++;
    }
  }
}

//------------------------------------------------------------------------------
// Вывод содержимого контейнера в указанный поток
void Out(container& c, ofstream& ofst) {
  ofst << "Container contains " << c.len << " elements." << endl;
  for (int i = 0; i < c.len; i++) {
    ofst << i << ": ";
    Out(c.cont[i], ofst);
  }
}

//------------------------------------------------------------------------------
// Вычисление суммы периметров всех фигур в контейнере
double QuotientSum(container& c) {
  double sum = 0.0;
  for (int i = 0; i < c.len; i++) {
    sum += Quotient(c.cont[i]);
  }
  return sum;
}